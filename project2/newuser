#!/bin/bash

if [[ $EUID -ne 0 ]]; then  
    echo "$0 is not running as root. Use sudo."
    exit 2
fi

USER_HOME="/home/$SUDO_USER" 
HOME=$USER_HOME

tutorial() {
    echo "   Please try again"
    echo "   type '-a' <groupname> to set additional groups"
    echo "   type '-u' <user> to set the username"
    echo "   type '-s' <shell> to set the shell"
    echo "   e.g. sudo ./newuser -a bluelock -u isagiyoichi -s /bin/bash"
    exit 1
}

PASSWD() {
    if [[ -n $USER ]]; then 
        passwd $USER 

        if [ $? -eq 0 ]; then  
        echo "Successful creation of password"

        else
            PASSWD_ERROR_HANDLING
        fi
    fi
}

USERADD_ERROR_HANDLING() {
    if [ $? -eq 1 ]; then #Checks what the exit status it to find errors. I copied this from the manual of useradd (man useradd).
        echo "Can't update password file"
    elif [ $? -eq 2 ]; then
        echo "Invalid command syntax"
    elif [ $? -eq 3 ]; then
        echo "Invalid argument to option"
    elif [ $? -eq 4 ]; then
        echo "UID already in use (and no -o)"
    elif [ $? -eq 6 ]; then
        echo "Specified group doesn't exist"
    elif [ $? -eq 9 ]; then
        echo "Username or group name already in use"
    elif [ $? -eq 10 ]; then
        echo "Can't update group file"
    elif [ $? -eq 12 ]; then
        echo "Can't create home directory"
    elif [ $? -eq 14 ]; then
        echo "Can't update SELinux user mapping"
    fi
}

PASSWD_ERROR_HANDLING() {
    if [ $? -eq 1 ]; then #Checks what the exit status it to find errors. I copied this from the manual of passwd (man passwd).
        echo "Permission denied"
    elif [ $? -eq 2 ]; then
        echo "Invalid combination of options"
    elif [ $? -eq 3 ]; then
        echo "Unexpected failure, nothing done"
    elif [ $? -eq 4 ]; then
        echo "Unexpected failure, passwd file missing"
    elif [ $? -eq 5 ]; then
        echo "Passwd file busy, try again"
    elif [ $? -eq 6 ]; then
        echo "Invalid argument to option"
    fi
}

ADDITIONAL_GROUPS=""
USER=""
SHELL=""

    while getopts ":a:u:s:" opt; do 
        case "${opt}" in
        a) 
        ADDITIONAL_GROUPS=$OPTARG
        ;;
        u) 
        USER=$OPTARG
        ;;
        s) 
        SHELL=$OPTARG
        ;;
        *) 
        tutorial
        ;;
        esac
    done


if [[ -n $USER ]]; then #if the $USER variable has a value, then
    useradd -s $SHELL -d "/home/$USER" -U $USER #-s to specify the shell, -d for home directory, -U to add a group named after the user. found from man useradd

    if [ $? -eq 0 ]; then 
    echo "Successfully created user"
    cp -r /etc/skel /home/$USER #cp is for copy and the -r is to specify to copy a directory recursively which will also copy all content. found from man cp

        if ! grep "$ADDITIONAL_GROUPS:" /etc/group; then
                groupadd $ADDITIONAL_GROUPS
        fi

        usermod -aG $ADDITIONAL_GROUPS $USER #usermod modifies the user and -aG is for adding to a group, which is then followed by the additional groups and username the user input through getopts

        PASSWD
    else
    USERADD_ERROR_HANDLING
    fi
fi
